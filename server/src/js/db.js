// Generated by CoffeeScript 1.7.1
(function() {
  var Q, connection, getQuestionsFromTable, mysql, resolvePromiseToQuery, withConnection;

  mysql = require('mysql');

  Q = require('Q');

  connection = mysql.createConnection({
    host: 'sql3.freemysqlhosting.net',
    user: 'sql330935',
    password: 'fW2!cZ8%',
    database: 'sql330935'
  });

  withConnection = function(fn) {
    connection.connect();
    fn();
    return connection.end();
  };

  resolvePromiseToQuery = function(promise, query, queryArgs) {
    if (queryArgs == null) {
      queryArgs = [];
    }
    return connection.query(query, queryArgs, function(err, rows, fields) {
      if (err) {
        return promise.reject(err);
      } else {
        return promise.resolve(rows);
      }
    });
  };

  exports.connectAndQuery = function(query, queryArgs) {
    var data;
    if (queryArgs == null) {
      queryArgs = [];
    }
    data = Q.defer();
    withConnection(function() {
      return resolvePromiseToQuery(data, query, queryArgs);
    });
    return data.promise;
  };

  exports.getMostDifficultQuestions = function(limit) {
    var queryString;
    queryString = 'SELECT * FROM questions WHERE num_answers >= 5 ORDER BY average_score LIMIT ?';
    return connectAndQuery(queryString, [limit]);
  };

  getQuestionsFromTable = function(name, limit) {
    var queryString;
    queryString = 'SELECT * FROM ?? LIMIT ?';
    return connectAndQuery(queryString, [name, limit]);
  };

  exports.getQuestions = function(type, limit) {
    return getQuestionsFromTable(type + '_questions', limit);
  };

}).call(this);
