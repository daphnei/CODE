// Generated by CoffeeScript 1.7.1
(function() {
  var a_per_b_question, comparision_question, db, fields, index, make_food, units;

  index = require('./index');

  db = require('./db');

  a_per_b_question = "composition";

  comparision_question = "compare";

  fields = ["Energy", "Protein", "Carbohydrate", "Total_Sugar", "Cholesterol", "Vitamin_A", "Calcium"];

  units = ["kcal", "g", "g", "g", "mg", "RAE", "mg"];

  make_food = function(name, genre, value, measure, unit) {
    return {
      name: name,
      genre: genre,
      value: value,
      serving_measure: measure,
      serving_unit: unit
    };
  };

  exports.generateQuestions = function(response, type, count, onComplete) {
    var chosen_field, queryString, rand_index, unit_for_chosen;
    console.log("Generating question of type: " + type);
    queryString = null;
    if (type === a_per_b_question) {
      rand_index = parseInt(Math.random() * fields.length);
      chosen_field = fields[rand_index];
      unit_for_chosen = units[rand_index];
      console.log(chosen_field);
      queryString = "select t1.Name as Name1, t1.Genre as Genre1, t1.Measure as Measure1, t1.Unit as Unit1, t1." + chosen_field + " as Value1, t1.id as id1, t2.Name as Name2, t2.Genre as Genre2, t2.Measure as Measure2, t2.Unit as Unit2, t2." + chosen_field + " as Value2, t2.id as id2 FROM all_foods t1, all_foods t2 WHERE t1." + chosen_field + " > 0 and t2." + chosen_field + " > 0 and t1." + chosen_field + " > 5 * t2." + chosen_field + " ORDER BY RAND() LIMIT " + count + ";";
    } else if (type === comparision_question) {
      rand_index = parseInt(Math.random() * fields.length);
      chosen_field = fields[rand_index];
      unit_for_chosen = units[rand_index];
      queryString = "SELECT t1.Name as Name1, t1.Genre as Genre1, t1.Unit as Unit1, t1.Measure as Measure1, t1." + chosen_field + " as Value1, t1.id as id1, t2.Name as Name2, t2.Genre as Genre2, t2.Unit as Unit2, t2.Measure as Measure2, t2." + chosen_field + " as Value2, t2.id as id2 FROM all_foods t1, all_foods t2 WHERE t1." + chosen_field + " > 0 AND t2." + chosen_field + " > 0 AND  t2." + chosen_field + " >= 2 AND t1." + chosen_field + " >= 2 * t2." + chosen_field + " AND t1." + chosen_field + " < 5 * t2." + chosen_field + " ORDER BY RAND() LIMIT " + count + ";";
    }
    if (queryString !== null) {
      return db.connectAndQuery(queryString).then(function(data) {
        var data_to_send, element, question, _i, _len;
        console.log(data);
        data_to_send = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          question = data[_i];
          element = {
            question_type: type,
            parameter: chosen_field,
            unit: unit_for_chosen,
            food1: make_food(question.Name1, question.Genre1, question.Value1, question.Measure1, question.Unit1),
            food2: make_food(question.Name2, question.Genre2, question.Value2, question.Measure2, question.Unit2)
          };
          data_to_send.push(element);
        }
        return onComplete(data_to_send);
      });
    } else {
      return response.send(404);
    }
  };

  exports.generateRandomQuestionSet = function(res, count) {
    var i, _i, _results;
    if (count == null) {
      count = 10;
    }
    _results = [];
    for (i = _i = 0; 0 <= count ? _i <= count : _i >= count; i = 0 <= count ? ++_i : --_i) {
      _results.push(console.log("fehkhiow"));
    }
    return _results;
  };

}).call(this);
